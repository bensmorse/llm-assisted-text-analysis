[
  {
    "objectID": "llm-assisted-text-analysis.html",
    "href": "llm-assisted-text-analysis.html",
    "title": "LLM-Assisted Analysis of Open-Ended Text",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\ntext analysis has long been a complicated and not always super insightful exercise. not anymore. now it’s vastly more powerful, insightful, and accessible."
  },
  {
    "objectID": "llm-assisted-text-analysis.html#quarto",
    "href": "llm-assisted-text-analysis.html#quarto",
    "title": "LLM-Assisted Analysis of Open-Ended Text",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\ntext analysis has long been a complicated and not always super insightful exercise. not anymore. now it’s vastly more powerful, insightful, and accessible."
  },
  {
    "objectID": "llm-assisted-text-analysis.html#running-code",
    "href": "llm-assisted-text-analysis.html#running-code",
    "title": "LLM-Assisted Analysis of Open-Ended Text",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed). Does this work?\nDoes this work?\n\ndf_dodge &lt;- read_csv(\"data\\\\Scraped_Car_Review_dodge.csv\", show_col_types = FALSE) |&gt; mutate(make = \"Dodge\") \n\nNew names:\n• `` -&gt; `...1`\n\nglimpse(df_dodge)\n\nRows: 8,499\nColumns: 8\n$ ...1          &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ Review_Date   &lt;chr&gt; \"on 10/13/05 15:30 PM (PDT)\", \"on 07/17/05 21:59 PM (PDT…\n$ Author_Name   &lt;chr&gt; \"roadking\", \"Mark\", \"Tom Sheer\", \"Keven Smith\", \"VanMan\"…\n$ Vehicle_Title &lt;chr&gt; \"2002 Dodge Ram Cargo Van 1500 3dr Van (3.9L 6cyl 3A)\", …\n$ Review_Title  &lt;chr&gt; \"Great delivery vehicle\", \"Disappointmnet\", \"Sweet van\",…\n$ Review        &lt;chr&gt; \"It's been a great delivery vehicle for my cafe business…\n$ Rating        &lt;dbl&gt; 4.625, 2.125, 5.000, 4.500, 2.875, 2.250, 3.000, 4.625, …\n$ make          &lt;chr&gt; \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"D…\n\ndf_ford &lt;- read_csv(\"data\\\\Scraped_Car_Review_ford.csv\", show_col_types = FALSE) |&gt; mutate(make = \"Ford\") \n\nNew names:\n• `` -&gt; `...1`\n\nglimpse(df_ford)\n\nRows: 20,717\nColumns: 8\n$ ...1          &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ Review_Date   &lt;chr&gt; \"on 06/06/18 14:19 PM (PDT)\", \"on 08/12/17 06:06 AM (PDT…\n$ Author_Name   &lt;chr&gt; \"Vicki\", \"Tom\", \"Ray\", \"Don Watson\", \"One owner\", \"Adam\"…\n$ Vehicle_Title &lt;chr&gt; \"2006 Ford Mustang Coupe GT Premium 2dr Coupe (4.6L 8cyl…\n$ Review_Title  &lt;chr&gt; \"2006 Mustang GT\", \"DREAM CAR\", \"Great Ride\", \"I have wa…\n$ Review        &lt;chr&gt; \"Doesn’t disappoint\", \"I bought mine 4/17 with 98K. Have…\n$ Rating        &lt;dbl&gt; 5.000, 3.000, 5.000, 5.000, 5.000, 3.000, 4.625, 4.375, …\n$ make          &lt;chr&gt; \"Ford\", \"Ford\", \"Ford\", \"Ford\", \"Ford\", \"Ford\", \"Ford\", …\n\ndf_toyota &lt;- read_csv(\"data\\\\Scrapped_Car_Reviews_Toyota.csv\", show_col_types = FALSE) |&gt; mutate(make = \"Toyota\") \n\nNew names:\n• `` -&gt; `...1`\n\nglimpse(df_toyota)\n\nRows: 18,747\nColumns: 8\n$ ...1          &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ Review_Date   &lt;chr&gt; \"on 02/02/17 19:53 PM (PST)\", \"on 12/17/16 16:40 PM (PST…\n$ Author_Name   &lt;chr&gt; \"Ricardo\", \"matt\", \"Joel G\", \"Dennis\", \"Alf Skrastins\", …\n$ Vehicle_Title &lt;chr&gt; \"1997 Toyota Previa Minivan LE 3dr Minivan\", \"1997 Toyot…\n$ Review_Title  &lt;chr&gt; \"great vehicle, Toyota best design ever. thank you\", \"my…\n$ Review        &lt;chr&gt; \"there is no way back, enjoy what you have .\", \"1st 95 w…\n$ Rating        &lt;dbl&gt; 5.000, 5.000, 5.000, 4.875, 5.000, 4.875, 5.000, 4.625, …\n$ make          &lt;chr&gt; \"Toyota\", \"Toyota\", \"Toyota\", \"Toyota\", \"Toyota\", \"Toyot…\n\ndf &lt;- bind_rows(df_dodge, df_ford, df_toyota)\n\n\n# remove leading words & spaces from date variable\n\ndf &lt;- df %&gt;%\n  mutate(Review_Date = str_replace_all(Review_Date, \"on \", \"\"),\n         Review_Date = str_replace_all(Review_Date, \"PDT\", \"\"),\n         Review_Date = str_replace_all(Review_Date, \" PST\", \"\"),\n         Review_Date = str_replace_all(Review_Date, \"[()]\", \"\"),\n         Review_Date = str_trim(Review_Date),\n         Review_Date = mdy_hm(Review_Date))\n\nglimpse(df)\n\nRows: 47,963\nColumns: 8\n$ ...1          &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ Review_Date   &lt;dttm&gt; 2005-10-13 15:30:00, 2005-07-17 21:59:00, 2002-07-16 00…\n$ Author_Name   &lt;chr&gt; \"roadking\", \"Mark\", \"Tom Sheer\", \"Keven Smith\", \"VanMan\"…\n$ Vehicle_Title &lt;chr&gt; \"2002 Dodge Ram Cargo Van 1500 3dr Van (3.9L 6cyl 3A)\", …\n$ Review_Title  &lt;chr&gt; \"Great delivery vehicle\", \"Disappointmnet\", \"Sweet van\",…\n$ Review        &lt;chr&gt; \"It's been a great delivery vehicle for my cafe business…\n$ Rating        &lt;dbl&gt; 4.625, 2.125, 5.000, 4.500, 2.875, 2.250, 3.000, 4.625, …\n$ make          &lt;chr&gt; \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"D…\n\ndf.bymonth &lt;- df |&gt;\n  #mutate(reviews.month = round_date(Review_Date, \"month\")) |&gt; # reviews by month-year\n  mutate(reviews.month = round_date(Review_Date, \"3 months\")) |&gt; # reviews by month-year\n  #filter(Review_Date &gt;= as.POSIXct(\"2014-01-01\")) |&gt;\n  group_by(make, reviews.month) |&gt;\n  summarise(\n    mean.rating = mean(Rating, na.rm=TRUE),\n    num.reviews = n()\n  )\n\n`summarise()` has grouped output by 'make'. You can override using the\n`.groups` argument.\n\nglimpse(df.bymonth)\n\nRows: 202\nColumns: 4\nGroups: make [3]\n$ make          &lt;chr&gt; \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"Dodge\", \"D…\n$ reviews.month &lt;dttm&gt; 2002-04-01, 2002-07-01, 2002-10-01, 2003-01-01, 2003-04…\n$ mean.rating   &lt;dbl&gt; 4.116834, 4.145455, 4.210106, 4.090802, 4.185142, 4.2671…\n$ num.reviews   &lt;int&gt; 199, 165, 188, 212, 212, 262, 271, 288, 283, 269, 185, 1…\n\np &lt;- ggplot(df.bymonth, aes(x=reviews.month, y=mean.rating, group=make, color=make)) +\n  geom_line()\n\np\n\n\n\n\n\n\n\ndf |&gt; \n  slice_sample(n = 1000) |&gt;\n  filter(Rating &lt; 2) |&gt;\n  select(make, Review_Title, Review) |&gt;\n  View()\n\n\n\n# positive\n# negative\n# neutral\n\n\n# among those with negative review \n# reliability\n# \n\n# among those with positive review\n# engine power / performance\n# build quality\n# smooth handling\n# reliability and durability\n# technology and/or connectivity\n# gas mileage / fuel efficiency\n# safety\n# cargo space\n# driver assistance\n# comfort features / car noise / ride quality\n\n# niche issues\n# electrical problems\n# transmission problems\n\n# other\n# resale value\n# brand loyalty?\n\n#edmunds categories: utility driving comfort interior technology"
  },
  {
    "objectID": "llm-assisted-text-analysis.html#descriptives",
    "href": "llm-assisted-text-analysis.html#descriptives",
    "title": "LLM-Assisted Analysis of Open-Ended Text",
    "section": "Descriptives",
    "text": "Descriptives\n\ndf$GPT_Rating &lt;- df$Rating + rnorm(length(df$Rating),0,1)\n\n# linear trend + confidence interval\np3 &lt;- ggplot(df, aes(x=Rating, y=GPT_Rating)) +\n  geom_point() +\n  geom_smooth(method=lm , color=\"red\", fill=\"#69b3a2\", se=TRUE) +\n  theme_ipsum()\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n# confusion matrix approach\n\n# Define the bin breaks and labels\nbin_breaks &lt;- c(-Inf, 2.5, 3.5, 5)\nbin_labels &lt;- c(\"Negative\", \"Neutral\", \"Positive\")\n\n# Use cut() to bin the age variable\ndf &lt;- df %&gt;%\n  mutate(Rating_cat = cut(Rating, breaks = bin_breaks, labels = bin_labels, include.lowest = TRUE))\n\n\n\ndf |&gt; \n  slice_sample(n = 1000) |&gt;\n  select(Rating, Rating_cat) |&gt;\n  View()"
  },
  {
    "objectID": "llm-assisted-text-analysis.html#disaggregation",
    "href": "llm-assisted-text-analysis.html#disaggregation",
    "title": "LLM-Assisted Analysis of Open-Ended Text",
    "section": "Disaggregation",
    "text": "Disaggregation\nresults by American, European, Japanesse, and South Korean automakers"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "llm-assisted-text-analysis",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]